C51 COMPILER V9.59.0.0   MAIN                                                              05/09/2019 11:51:47 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\keil C51\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\mai
                    -n.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "reg52.h"
   2          #include "intrins.h"
   3          #include "iic.h"
   4          #include "stdio.h"
   5          #include "lcd1602.h"
   6          #include "button.h"
   7          
   8          #define uchar unsigned char
   9          
  10          sbit in  = P1^0;
  11          sbit out = P1^1;
  12          
  13          bit in_last = 1;
  14          bit out_last= 1;
  15          bit Flag = 0;
  16          
  17          sbit CS  = P1^2; 
  18          sbit CLK = P1^3;
  19          sbit DIO = P1^4;
  20          
  21          
  22          unsigned char lcd[20] = {0};
  23          unsigned char dac_out = 0;
  24          unsigned char speed_time = 0;
  25          
  26          
  27          int set_speed = 30; 
  28          unsigned char current = 0;
  29          unsigned char light_get = 0;
  30          unsigned char current_last = 0;
  31          unsigned char current_geding = 0;
  32          unsigned char Key_Value = 0;
  33          
  34          int speed_kp = 30;
  35          int speed_ki = 8;
  36          
  37          int speed_error;
  38          int speed_errorlast;
  39          int speed = 0;
  40          
  41          int current_kp = 200;
  42          int current_ki = 30; 
  43          
  44          int current_error;
  45          int current_errorlast;
  46          
  47          unsigned char Get_ADC(bit ch);
  48          void timer_init();
  49          unsigned char speed_pi();
  50          unsigned char current_pi(int set_current);
  51          
  52          void main()
  53          {
  54   1        ad_send(0x40,255);
C51 COMPILER V9.59.0.0   MAIN                                                              05/09/2019 11:51:47 PAGE 2   

  55   1        timer_init();
  56   1        lcdinit();
  57   1        sprintf(lcd,"speed:%03d",speed);
  58   1        lcd_display_L(lcd);
  59   1        sprintf(lcd,"current:%03d",0);
  60   1        lcd_display_H(lcd);
  61   1        while(1)
  62   1        {
  63   2          Key_Value = Button_Value();
  64   2          switch (Key_Value)
  65   2          {
  66   3            case 1:
  67   3              Flag = 1;
  68   3              break;
  69   3            case 2:
  70   3              set_speed = set_speed + 4;
  71   3              break;
  72   3            case 3:
  73   3              set_speed = set_speed - 4;
  74   3              break;
  75   3            case 4:
  76   3              Flag = 0;
  77   3              break;
  78   3            default:
  79   3              break;
  80   3          }
  81   2          if(Flag)
  82   2          {
  83   3            EA = 1;
  84   3            light_get = Get_ADC(0); 
  85   3            sprintf(lcd,"speed:%03d",speed);
  86   3            lcd_display_L(lcd);
  87   3            sprintf(lcd,"current:%03d",(int)current);
  88   3            lcd_display_H(lcd);   
  89   3          }
  90   2          else
  91   2          {
  92   3            EA = 0;
  93   3            light_get = Get_ADC(0);
  94   3            ad_send(0x40,255);
  95   3            speed = 0;
  96   3            sprintf(lcd,"speed:%03d",speed);
  97   3            lcd_display_L(lcd);
  98   3            current = 0;
  99   3            sprintf(lcd,"current:%03d",current);
 100   3            lcd_display_H(lcd);       
 101   3          }
 102   2          sprintf(lcd,"set:%02d",set_speed);
 103   2          lcd_display_Set(lcd);
 104   2        }
 105   1      }
 106          
 107          void timer0_irq() interrupt 1
 108          {
 109   1        TH0 = (65535-25000)>>8;
 110   1        TL0 = 65535-25000;
 111   1      
 112   1        if(++speed_time==2)
 113   1        {
 114   2          speed_time=0;
 115   2          speed=TH1;
 116   2          speed<<=8;
C51 COMPILER V9.59.0.0   MAIN                                                              05/09/2019 11:51:47 PAGE 3   

 117   2          speed=TL1;
 118   2          TH1=0;
 119   2          TL1=0;     
 120   2          current_geding=speed_pi();
 121   2        }
 122   1      
 123   1        current = Get_ADC(0)/2+current_last/2;  
 124   1        current_last = current;
 125   1      
 126   1        dac_out=current_pi(current_geding);
 127   1        ad_send(0x40,255-dac_out);
 128   1      }
 129          
 130          unsigned char current_pi(int set_current) 
 131          {
 132   1        static unsigned long pwm=0; 
 133   1      
 134   1        unsigned char pwm_u8=0;
 135   1        
 136   1        current_error=set_current -(int)current;
 137   1      
 138   1        pwm+=(current_error-current_errorlast)*current_kp+current_error*current_ki;
 139   1      
 140   1        current_errorlast=current_error;
 141   1      
 142   1        if(pwm<0) 
 143   1          pwm=0;
 144   1        else if(pwm>65536) 
 145   1          pwm=65536;
 146   1      
 147   1        pwm_u8=(unsigned char)(pwm>>8);
 148   1      
 149   1        return pwm_u8;
 150   1      }
 151          
 152          
 153          unsigned char speed_pi()     
 154          {
 155   1        static unsigned long pwm=0; 
 156   1      
 157   1        unsigned char pwm_u8=0;
 158   1        
 159   1        speed_error=set_speed - speed;
 160   1      
 161   1        pwm+=(speed_error-speed_errorlast)*speed_kp+speed_error*speed_ki;
 162   1      
 163   1        speed_errorlast=speed_error;
 164   1      
 165   1        if(pwm<1) 
 166   1          pwm=1;
 167   1        else if(pwm>32767) 
 168   1          pwm=32767;
 169   1      
 170   1        pwm_u8=(unsigned char)(pwm>>8);
 171   1      
 172   1        return pwm_u8;
 173   1      }
 174          
 175          
 176          void timer_init()
 177          {
 178   1        TMOD=0x51;
C51 COMPILER V9.59.0.0   MAIN                                                              05/09/2019 11:51:47 PAGE 4   

 179   1        TH1=0;
 180   1        TL1=0;
 181   1        EA=0;
 182   1        ET0=1;
 183   1        TH0=(65535-25000)/256;
 184   1        TL0=(65535-25000)%256;
 185   1        TR0=1;
 186   1        TR1=1;
 187   1      }
 188          
 189          
 190          unsigned char Get_ADC(bit ch)
 191          {
 192   1        unsigned char i,dat1 = 0,dat2 = 0;
 193   1        
 194   1        CS = 0; CLK = 0;
 195   1        DIO = 1; _nop_(); _nop_();
 196   1        CLK = 1; _nop_(); _nop_();
 197   1        CLK = 0; DIO = 1; _nop_(); _nop_();
 198   1        CLK = 1;          _nop_(); _nop_();
 199   1        CLK = 0; DIO = ch; _nop_(); _nop_();
 200   1        CLK = 1;          _nop_(); _nop_();
 201   1        CLK = 0; DIO = 1; _nop_(); _nop_();
 202   1      
 203   1        for(i = 0; i < 8; i++)
 204   1        {
 205   2          CLK = 1; _nop_(); _nop_();
 206   2          CLK = 0; _nop_(); _nop_();
 207   2          dat1 = (dat1 << 1)|DIO;
 208   2        }
 209   1        
 210   1        for(i = 0; i < 8; i++)
 211   1        {
 212   2          dat2 = dat2|((unsigned char)DIO<<i);
 213   2          CLK = 1; _nop_(); _nop_();
 214   2          CLK = 0; _nop_(); _nop_();
 215   2        }
 216   1        CS = 1;
 217   1        
 218   1        return dat1;
 219   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    913    ----
   CONSTANT SIZE    =     33    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     55       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
