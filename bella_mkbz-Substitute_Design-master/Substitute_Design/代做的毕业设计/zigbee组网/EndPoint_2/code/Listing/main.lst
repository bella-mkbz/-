C51 COMPILER V9.59.0.0   MAIN                                                              02/03/2019 16:04:22 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN ..\Output\main.obj
COMPILER INVOKED BY: D:\keil C51\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(..\Listing\mai
                    -n.lst) TABS(2) OBJECT(..\Output\main.obj)

line level    source

   1          #include "string.h"
   2          #include "delay.h"
   3          #include "uart.h"
   4          #include "temp.h"
   5          
   6          #define Buf2_Max 200 //串口二缓存长度
   7          
   8          /*************  本地变量声明  **************/
   9          xdata u8 Uart2_Buf[Buf2_Max];
  10          unsigned char Datas_Buff[8] = {0, 0, 0, 0, 0, 0, 0, '\0'};
  11          u8 First_Int = 0;
  12          
  13          /*************  本地函数声明  **************/
  14          void CLR_Buf2(void);
  15          void Temp_Change(int temp, unsigned char *Buff);
  16          
  17          /*******************************************************************************
  18          * 函数名 : main 
  19          * 描述   : 主函数
  20          * 输入   : 
  21          * 输出   : 
  22          * 返回   : 
  23          * 注意   : 串口2负责与GPRS模块通信，串口1用于串口调试，可以避免在下载程序时数据
  24                     还发送到模块
  25          *******************************************************************************/
  26          void main(void)
  27          {
  28   1        int i = 0, send_flag = 0;
  29   1        Uart1Init();
  30   1        Uart2Init();
  31   1        EA = 0;
  32   1        UART1_SendString("初始化完成\r\n");
  33   1      
  34   1        for (i = 0; i < 3; i++)
  35   1        {
  36   2          Temp_Change(Ds18b20ReadTemp(), Datas_Buff);
  37   2          delay_ms(500);
  38   2        }
  39   1      
  40   1        while (1)
  41   1        {
  42   2          Temp_Change(Ds18b20ReadTemp(), Datas_Buff);
  43   2          UART2_SendData(0x12);
  44   2          for (i = 1; i < 4; i++)
  45   2          {
  46   3            UART2_SendData(Datas_Buff[i]);
  47   3          }
  48   2          delay_ms(800);
  49   2        }
  50   1      }
  51          
  52          /*******************************************************************************
  53          * 函数名 : Uart1 
  54          * 描述   : 串口1中断服务入口函数
C51 COMPILER V9.59.0.0   MAIN                                                              02/03/2019 16:04:22 PAGE 2   

  55          * 输入   : 
  56          * 输出   : 
  57          * 返回   : 
  58          * 注意   : 
  59          *******************************************************************************/
  60          void Uart1() interrupt 4
  61          {
  62   1        if (RI)
  63   1        {
  64   2          RI = 0; //清除RI位
  65   2        }
  66   1        if (TI)
  67   1        {
  68   2          TI = 0; //清除TI位
  69   2        }
  70   1      }
  71          
  72          /*******************************************************************************
  73          * 函数名 : Uart2
  74          * 描述   : 串口2中断服务入口函数
  75          * 输入   : 
  76          * 输出   : 
  77          * 返回   : 
  78          * 注意   : 
  79          *******************************************************************************/
  80          void Uart2() interrupt 8
  81          {
  82   1        IE2 &= ~0x01; //关闭串口2中断
  83   1        if (S2CON & S2RI)
  84   1        {
  85   2          S2CON &= ~S2RI;         //清除S2RI位
  86   2          Uart2_Buf[First_Int] = S2BUF; //将接收到的字符串存到缓存中
  87   2          First_Int++;          //缓存指针向后移动
  88   2          if (First_Int > Buf2_Max)  //如果缓存满,将缓存指针指向缓存的首地址
  89   2          {
  90   3            First_Int = 0;
  91   3          }
  92   2        }
  93   1        if (S2CON & S2TI)
  94   1        {
  95   2          S2CON &= ~S2TI; //清除S2TI位
  96   2        }
  97   1        IE2 |= 0x01; //使能串口2中断
  98   1      }
  99          
 100          /*******************************************************************************
 101          * 函数名 : CLR_Buf2
 102          * 描述   : 清除串口2缓存数据
 103          * 输入   : 
 104          * 输出   : 
 105          * 返回   : 
 106          * 注意   : 
 107          *******************************************************************************/
 108          void CLR_Buf2(void)
 109          {
 110   1        u16 k;
 111   1        for (k = 0; k < Buf2_Max; k++) //将缓存内容清零
 112   1        {
 113   2          Uart2_Buf[k] = 0x00;
 114   2        }
 115   1        First_Int = 0; //接收字符串的起始存储位置
 116   1      }
C51 COMPILER V9.59.0.0   MAIN                                                              02/03/2019 16:04:22 PAGE 3   

 117          
 118          void Temp_Change(int temp, unsigned char *Buff)
 119          {
 120   1        float tp;
 121   1        if (temp < 0) //当温度值为负数
 122   1        {
 123   2          Buff[0] = '-';
 124   2          //因为读取的温度是实际温度的补码，所以减1，再取反求出原码
 125   2          temp = temp - 1;
 126   2          temp = ~temp;
 127   2          tp = temp;
 128   2          temp = tp * 0.0625 * 100 + 0.5;
 129   2          //留两个小数点就*100，+0.5是四舍五入，因为C语言浮点数转换为整型的时候把小数点
 130   2          //后面的数自动去掉，不管是否大于0.5，而+0.5之后大于0.5的就是进1了，小于0.5的就
 131   2          //算由?.5，还是在小数点后面。
 132   2        }
 133   1        else
 134   1        {
 135   2          Buff[0] = '+';
 136   2          tp = temp; //因为数据处理有小数点所以将温度赋给一个浮点型变量
 137   2          //如果温度是正的那么，那么正数的原码就是补码它本身
 138   2          temp = tp * 0.0625 * 100 + 0.5;
 139   2          //留两个小数点就*100，+0.5是四舍五入，因为C语言浮点数转换为整型的时候把小数点
 140   2          //后面的数自动去掉，不管是否大于0.5，而+0.5之后大于0.5的就是进1了，小于0.5的就
 141   2          //算加上0.5，还是在小数点后面
 142   2        }
 143   1        Buff[1] = temp / 10000;
 144   1        Buff[2] = temp % 10000 / 1000;
 145   1        Buff[3] = temp % 1000 / 100;
 146   1        Buff[4] = '.';
 147   1        Buff[5] = temp % 100 / 10;
 148   1        Buff[6] = temp % 10;
 149   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    488    ----
   CONSTANT SIZE    =     13    ----
   XDATA SIZE       =    200    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      9      13
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
