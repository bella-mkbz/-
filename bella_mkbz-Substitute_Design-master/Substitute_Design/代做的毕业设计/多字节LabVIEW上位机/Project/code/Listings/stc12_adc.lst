C51 COMPILER V9.57.0.0   STC12_ADC                                                         10/31/2018 23:39:38 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE STC12_ADC
OBJECT MODULE PLACED IN .\Objects\stc12_adc.obj
COMPILER INVOKED BY: D:\mdk5\C51\BIN\C51.EXE stc12_adc.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\st
                    -c12_adc.lst) TABS(2) OBJECT(.\Objects\stc12_adc.obj)

line level    source

   1          #include "stc12_adc.h"
   2          
   3          /*Define ADC operation const for ADC_CONTR*/
   4          #define ADC_POWER   0x80            //ADC power control bit
   5          #define ADC_FLAG    0x10            //ADC complete flag
   6          #define ADC_START   0x08            //ADC start control bit
   7          #define ADC_SPEEDLL 0x00            //420 clocks
   8          #define ADC_SPEEDL  0x20            //280 clocks
   9          #define ADC_SPEEDH  0x40            //140 clocks
  10          #define ADC_SPEEDHH 0x60            //70 clocks
  11          
  12          void InitADC()
  13          {
  14   1          P1ASF = 0x01;                   //Open First channels ADC function, P1.0
  15   1          ADC_RES = 0;                    //Clear previous result
  16   1          ADC_CONTR = ADC_POWER | ADC_SPEEDLL;
  17   1          Delay(2);                       //ADC power-on and delay
  18   1      }
  19          
  20          unsigned char GetADCResult()
  21          {
  22   1          ADC_CONTR = ADC_POWER | ADC_SPEEDLL | ADC_START;
  23   1          _nop_();                        //Must wait before inquiry
  24   1          _nop_();
  25   1          _nop_();
  26   1          _nop_();
  27   1          while (!(ADC_CONTR & ADC_FLAG));//Wait complete flag
  28   1          ADC_CONTR &= ~ADC_FLAG;         //Close ADC
  29   1      
  30   1          return ADC_RES;                 //Return ADC result
  31   1      }
  32          
  33          void Delay(unsigned int n)
  34          {
  35   1          unsigned int x;
  36   1          while (n--)
  37   1          {
  38   2              x = 5000;
  39   2              while (x--);
  40   2          }
  41   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     60    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
