C51 COMPILER V9.60.0.0   MAIN                                                              02/02/2020 13:09:03 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\software install\Keil_C51\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRI
                    -NT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <reg51.h>
   2          #include "uart.h"
   3          #include "delay.h"
   4          
   5          
   6          sbit Rs485_R_W = P3^7;
   7          /*************************本地程序定义变量*****************************/
   8          #define Buf2_Max 25                     // 串口接收最大长度
   9          bit Rec_Flag;                           // 串口帧数据接收完成标志
  10          unsigned char Adress = 0;
  11          unsigned char Rec_Len = 0;              // 串口接收数据长度
  12          unsigned char Rec_Buff[Buf2_Max];       // 串口接收数据缓冲区
  13          unsigned char Send_Buff[25] = {0x00};   //申请数组长度一定要大于发送长度，否则校验出错
  14          void CLR_Buf2(void);
  15          /*********************************************************************/
  16          
  17          void main(void)
  18          {
  19   1        unsigned int Crc_Result = 0;
  20   1        unsigned char high = 0, Low = 0;
  21   1        Adress = P1&0X03;
  22   1        Timer1Init();
  23   1        SerialInit();
  24   1        Rs485_R_W = 0;  // 1代表写，0代表读
  25   1        Delay1ms(10);
  26   1        EA = 1;
  27   1        while(1)
  28   1        {
  29   2          if(Rec_Flag)
  30   2          {
  31   3            Rec_Flag = 0;
  32   3            if(Adress == Rec_Buff[0])
  33   3            {
  34   4              Crc_Result = factory_crc16(Rec_Buff, Rec_Len-2);
  35   4              if(Rec_Buff[Rec_Len-2] == (Crc_Result >> 8) && Rec_Buff[Rec_Len-1] == (Crc_Result&0xff))
  36   4              { 
  37   5                switch (Rec_Buff[1])
  38   5                {
  39   6                  case 0x01:  //功能码01
  40   6                    break;
  41   6                  case 0x03:  //功能码03
  42   6                      Send_Buff[0] = Adress;
  43   6                      Send_Buff[1] = 0x03;
  44   6                      Send_Buff[2] = Rec_Buff[2];
  45   6                      Send_Buff[3] = 0x00;
  46   6                      Send_Buff[4] = Adress;
  47   6                      Crc_Result = factory_crc16(Send_Buff, Rec_Buff[2]*2+3);
  48   6                      Send_Buff[Rec_Buff[2]*2+3] = Crc_Result>>8;
  49   6                      Send_Buff[Rec_Buff[2]*2+4] = Crc_Result&0xff;
  50   6                      Rs485_R_W = 1;
  51   6                      Delay1ms(30);
  52   6                      SendBuff(Send_Buff, Rec_Buff[2]*2+5);
  53   6                      Delay1ms(30);
  54   6                      Rs485_R_W = 0;  
C51 COMPILER V9.60.0.0   MAIN                                                              02/02/2020 13:09:03 PAGE 2   

  55   6                    break;
  56   6                  default:
  57   6                    break;
  58   6                }
  59   5              
  60   5              }
  61   4            }   
  62   3            CLR_Buf2();
  63   3          }
  64   2        }
  65   1      }
  66          
  67          void Uart() interrupt 4
  68          {
  69   1          if (RI)
  70   1          {
  71   2            RI =  0;                        //清除RI位
  72   2            ET0 = 0;                        //关闭定时器0中断
  73   2            Rec_Buff[Rec_Len] = SBUF;       //将接收到的字符串存到缓存中
  74   2            Rec_Len++;                      //缓存指针向后移动
  75   2            if(Rec_Len > Buf2_Max)          //如果缓存满,将缓存指针指向缓存的首地址
  76   2            {
  77   3              Rec_Len = 0;
  78   3            }
  79   2            TL0 = 0x00;   //设置定时初值
  80   2            TH0 = 0xDC;   //设置定时初值
  81   2            ET0 = 1;      //打开定时器1中断     
  82   2          }
  83   1          if (TI)
  84   1          {
  85   2            TI = 0;         //清除TI位
  86   2          }
  87   1      }
  88          
  89          void Timer1() interrupt 1
  90          {
  91   1          static unsigned char i = 0;
  92   1          TL0 = 0x00;   //设置定时初值
  93   1          TH0 = 0xDC;   //设置定时初值
  94   1          i++;
  95   1          if(i == 10)
  96   1          {
  97   2            Rec_Flag = 1;
  98   2            ET0 = 0;  
  99   2            i = 0;    
 100   2          }
 101   1      }
 102          
 103          void CLR_Buf2(void)
 104          {
 105   1          unsigned int k;
 106   1          for(k = 0;k < Buf2_Max; k++)      //将缓存内容清零
 107   1          {
 108   2            Rec_Buff[k] = 0x00;
 109   2          }
 110   1          Rec_Len = 0;              //接收字符串的起始存储位置
 111   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    291    ----
   CONSTANT SIZE    =   ----    ----
C51 COMPILER V9.60.0.0   MAIN                                                              02/02/2020 13:09:03 PAGE 3   

   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     53       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
