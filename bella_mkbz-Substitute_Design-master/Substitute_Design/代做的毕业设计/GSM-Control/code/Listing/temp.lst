C51 COMPILER V9.59.0.0   TEMP                                                              12/24/2018 14:09:36 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE TEMP
OBJECT MODULE PLACED IN ..\Output\temp.obj
COMPILER INVOKED BY: D:\keil C51\C51\BIN\C51.EXE temp.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(..\Listing\tem
                    -p.lst) TABS(2) OBJECT(..\Output\temp.obj)

line level    source

   1          #include "temp.h"
   2          /*******************************************************************************
   3          * 函数名         : Delay1ms
   4          * 函数功能       : 延时函数
   5          * 输入           : 无
   6          * 输出           : 无
   7          *******************************************************************************/
   8          
   9          void Delay642us()   //@11.0592MHz
  10          {
  11   1        unsigned char i, j;
  12   1      
  13   1        _nop_();
  14   1        _nop_();
  15   1        i = 7;
  16   1        j = 228;
  17   1        do
  18   1        {
  19   2          while (--j);
  20   2        } while (--i);
  21   1      }
  22          
  23          void Delay500us()   //@11.0592MHz
  24          {
  25   1        unsigned char i, j;
  26   1      
  27   1        i = 6;
  28   1        j = 93;
  29   1        do
  30   1        {
  31   2          while (--j);
  32   2        } while (--i);
  33   1      }
  34          void Delay68us()    //@11.0592MHz
  35          {
  36   1        unsigned char i, j;
  37   1      
  38   1        _nop_();
  39   1        _nop_();
  40   1        i = 1;
  41   1        j = 183;
  42   1        do
  43   1        {
  44   2          while (--j);
  45   2        } while (--i);
  46   1      }
  47          void Delay6us()   //@11.0592MHz
  48          {
  49   1        unsigned char i;
  50   1      
  51   1        _nop_();
  52   1        _nop_();
  53   1        i = 13;
  54   1        while (--i);
C51 COMPILER V9.59.0.0   TEMP                                                              12/24/2018 14:09:36 PAGE 2   

  55   1      }
  56          void Delay48us()    //@11.0592MHz
  57          {
  58   1        unsigned char i, j;
  59   1      
  60   1        _nop_();
  61   1        i = 1;
  62   1        j = 128;
  63   1        do
  64   1        {
  65   2          while (--j);
  66   2        } while (--i);
  67   1      }
  68          void Delay1ms()   //@11.0592MHz
  69          {
  70   1        unsigned char i, j;
  71   1      
  72   1        _nop_();
  73   1        i = 11;
  74   1        j = 190;
  75   1        do
  76   1        {
  77   2          while (--j);
  78   2        } while (--i);
  79   1      }
  80          /*******************************************************************************
  81          * 函数名         : Ds18b20Init
  82          * 函数功能       : 初始化
  83          * 输入           : 无
  84          * 输出           : 初始化成功返回1，失败返回0
  85          *******************************************************************************/
  86          
  87          unsigned char Ds18b20Init()
  88          {
  89   1        unsigned int i;
  90   1        DSPORT=0;      //将总线拉低480us~960us
  91   1        Delay642us();
  92   1        DSPORT=1;     //然后拉高总线，如果DS18B20做出反应会将在15us~60us后总线拉低
  93   1        i=0;
  94   1        while(DSPORT) //等待DS18B20拉低总线
  95   1        {
  96   2          i++;
  97   2          if(i>10)//等待>5MS
  98   2            return 0;//初始化失败 
  99   2          Delay500us();
 100   2        }
 101   1        return 1;//初始化成功
 102   1      }
 103          
 104          /*******************************************************************************
 105          * 函数名         : Ds18b20WriteByte
 106          * 函数功能       : 向18B20写入一个字节
 107          * 输入           : com
 108          * 输出           : 无
 109          *******************************************************************************/
 110          
 111          void Ds18b20WriteByte(unsigned char dat)
 112          {
 113   1        unsigned int j;
 114   1        for(j=0;j<8;j++)
 115   1        {
 116   2          DSPORT=0;     //每写入一位数据之前先把总线拉低1us
C51 COMPILER V9.59.0.0   TEMP                                                              12/24/2018 14:09:36 PAGE 3   

 117   2          _nop_();
 118   2          DSPORT=dat&0x01; //然后写入一个数据，从最低位开始
 119   2          Delay68us();
 120   2          DSPORT=1; //然后释放总线，至少1us给总线恢复时间才能接着写入第二个数值
 121   2          dat>>=1;
 122   2        }
 123   1      }
 124          /*******************************************************************************
 125          * 函数名         : Ds18b20ReadByte
 126          * 函数功能       : 读取一个字节
 127          * 输入           : com
 128          * 输出           : 无
 129          *******************************************************************************/
 130          
 131          
 132          unsigned char Ds18b20ReadByte()
 133          {
 134   1        unsigned char byte,bi;
 135   1        unsigned int j; 
 136   1        for(j=8;j>0;j--)
 137   1        {
 138   2          DSPORT=0;//先将总线拉低1us
 139   2          _nop_();
 140   2          DSPORT=1;//然后释放总线
 141   2          Delay6us();
 142   2          bi=DSPORT;   //读取数据，从最低位开始读取
 143   2          /*将byte左移一位，然后与上右移7位后的bi，注意移动之后移掉那位补0。*/
 144   2          byte=(byte>>1)|(bi<<7);             
 145   2          Delay48us();
 146   2        }       
 147   1        return byte;
 148   1      }
 149          /*******************************************************************************
 150          * 函数名         : Ds18b20ChangTemp
 151          * 函数功能       : 让18b20开始转换温度
 152          * 输入           : com
 153          * 输出           : 无
 154          *******************************************************************************/
 155          
 156          void  Ds18b20ChangTemp()
 157          {
 158   1        Ds18b20Init();
 159   1        Delay1ms();
 160   1        Ds18b20WriteByte(0xcc);   //跳过ROM操作命令    
 161   1        Ds18b20WriteByte(0x44);     //温度转换命令
 162   1      //  Delay1ms(100);  //等待转换成功，而如果你是一直刷着的话，就不用这个延时了
 163   1         
 164   1      }
 165          /*******************************************************************************
 166          * 函数名         : Ds18b20ReadTempCom
 167          * 函数功能       : 发送读取温度命令
 168          * 输入           : com
 169          * 输出           : 无
 170          *******************************************************************************/
 171          
 172          void  Ds18b20ReadTempCom()
 173          { 
 174   1      
 175   1        Ds18b20Init();
 176   1        Delay1ms();
 177   1        Ds18b20WriteByte(0xcc);  //跳过ROM操作命令
 178   1        Ds18b20WriteByte(0xbe);  //发送读取温度命令
C51 COMPILER V9.59.0.0   TEMP                                                              12/24/2018 14:09:36 PAGE 4   

 179   1      }
 180          /*******************************************************************************
 181          * 函数名         : Ds18b20ReadTemp
 182          * 函数功能       : 读取温度
 183          * 输入           : com
 184          * 输出           : 无
 185          *******************************************************************************/
 186          
 187          int Ds18b20ReadTemp()
 188          {
 189   1        int temp=0;
 190   1        unsigned char tmh,tml;
 191   1        Ds18b20ChangTemp();       //先写入转换命令
 192   1        Ds18b20ReadTempCom();     //然后等待转换完后发送读取温度命令
 193   1        tml=Ds18b20ReadByte();    //读取温度值共16位，先读低字节
 194   1        tmh=Ds18b20ReadByte();    //再读高字节
 195   1        temp=tmh;
 196   1        temp<<=8;
 197   1        temp|=tml;
 198   1        return temp;
 199   1      }
 200          
 201          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    219    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
